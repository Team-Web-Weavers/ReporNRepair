=========================
üõ¢Ô∏è  SQL COMMANDS
=========================
Install POSTGRESQL using th bat file , then remember the password 

check installation :
CMD -> psql --version 
ACCESS PSQL Command Line Client
psql -U POSTGRES
then ....

1) CREATE USER 

CREATE USER <your_username> WITH PASSWORD 'your_password';

2) CREATE DATABASE

CREATE DATABASE hackurway_db;


3) GRANT ALL PERMISSION TO THE USER

GRANT ALL PRIVILEGES ON DATABASE hackurway_db TO <username>;

ALTER USER <username> WITH SUPERUSER;

=====================================
-- USERS TABLE
CREATE TABLE users (
    userid VARCHAR(50) PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(10) CHECK (role IN ('Citizen', 'Worker', 'Admin')),
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL
);

-- COMPLAINTS: Core complaint data submitted by citizens
CREATE TABLE complaints (
    complaint_id SERIAL PRIMARY KEY,
    userid VARCHAR(50) REFERENCES users(userid) ON DELETE CASCADE,  -- must be a Citizen
    description TEXT NOT NULL,
    image BYTEA,
    submitted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- COMPLAINT DETAILS: Normalized table for contact/address
CREATE TABLE complaint_details (
    complaint_id INT PRIMARY KEY REFERENCES complaints(complaint_id) ON DELETE CASCADE,
    phone_number VARCHAR(15),
    address TEXT
);

-- COMPLAINT ASSIGNMENTS: Links complaints to workers + status
CREATE TABLE complaint_assignments (
    assignment_id SERIAL PRIMARY KEY,
    complaint_id INT REFERENCES complaints(complaint_id) ON DELETE CASCADE,
    worker_id VARCHAR(50) REFERENCES users(userid) ON DELETE SET NULL,  -- must be a Worker
    status VARCHAR(20) DEFAULT 'Pending' CHECK (status IN ('Pending', 'In Progress', 'Resolved')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- COMPLAINT STATUS LOGS: Optional audit trail of status changes (optional but useful)
CREATE TABLE complaint_status_logs (
    log_id SERIAL PRIMARY KEY,
    complaint_id INT REFERENCES complaints(complaint_id) ON DELETE CASCADE,
    worker_id VARCHAR(50),
    status VARCHAR(20) CHECK (status IN ('Pending', 'In Progress', 'Resolved')),
    changed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);




=========================
üêô GIT COMMANDS
=========================
# Initialize Repo:


# Clone Repo from Specific Branch:
git clone -b branch-name https://github.com/username/repo.git


# Add & Commit from Specific Branch:
git checkout branch-name
git add .
git commit -m "Your commit message"


# Push to Specific Branch:
git push origin branch-name


# Pull from Specific Branch:
git pull origin branch-name


# Create/Switch Branch:
git checkout -b branch-name



=========================
‚öõÔ∏è REACT COMMANDS
=========================
npm i ( evry time after you pull)
npm run dev


=========================
 üß∞ PYTHON
=========================

pip install -r requirements.txt
to run python :
cd <directory> --here--> cd backend
python app.py


=========================
 OTHER UTILITIES / TIPS
=========================

1) Double click the install_tools.bat file to download all externals like ollama and postgresql
